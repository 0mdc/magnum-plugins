# Author: mosra <mosra@centrum.cz>
pkgname=emscripten-magnum-plugins
pkgver=dev
pkgrel=1
pkgdesc="Plugins for the Magnum C++11/C++14 graphics engine (Emscripten)"
arch=('any')
url="https://magnum.graphics"
license=('MIT')
depends=('emscripten-magnum=dev' 'emscripten-faad2')
# Emscripten doesn't have zstd on its own, so we fall back to using the one
# bundled with Basis Universal. TODO redo when the bundled dependency is
# dropped
makedepends=('cmake' 'emscripten' 'corrade' 'ninja' 'basis-universal-src')
options=(!strip !buildflags)

_rootdir=$startdir/../../

build() {
    if [ ! -d "$_rootdir/build-emscripten" ] ; then
        mkdir "$_rootdir/build-emscripten"
        cd "$_rootdir/build-emscripten"

        cmake .. \
            -DCMAKE_TOOLCHAIN_FILE="$_rootdir/toolchains/generic/Emscripten.cmake" \
            -G Ninja
    fi

    cd "$_rootdir/build-emscripten"

    # For Basis disabling everything we don't support in Magnum + BC7 as its
    # tables are YUUUGE (see the Basis README for details)
    # MAGNUM_WITH_BASISIMAGECONVERTER is disabled as it requires pthreads.
    cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr/lib/emscripten/system \
        -DCMAKE_CXX_FLAGS="-DBASISD_SUPPORT_BC7=0 -DBASISD_SUPPORT_ATC=0 -DBASISD_SUPPORT_FXT1=0 -DBASISD_SUPPORT_PVRTC2=0" \
        -DBASIS_UNIVERSAL_DIR=/opt/basis-universal \
        -DMAGNUM_WITH_ASSIMPIMPORTER=OFF \
        -DMAGNUM_WITH_ASTCIMPORTER=ON \
        -DMAGNUM_WITH_BASISIMPORTER=ON \
        -DMAGNUM_WITH_BASISIMAGECONVERTER=OFF \
        -DMAGNUM_WITH_CGLTFIMPORTER=ON \
        -DMAGNUM_WITH_DDSIMPORTER=ON \
        -DMAGNUM_WITH_DEVILIMAGEIMPORTER=OFF \
        -DMAGNUM_WITH_DRFLACAUDIOIMPORTER=ON \
        -DMAGNUM_WITH_DRMP3AUDIOIMPORTER=ON \
        -DMAGNUM_WITH_DRWAVAUDIOIMPORTER=ON \
        -DMAGNUM_WITH_FAAD2AUDIOIMPORTER=ON \
        -DMAGNUM_WITH_GLTFIMPORTER=ON \
        -DMAGNUM_WITH_ICOIMPORTER=ON \
        -DMAGNUM_WITH_KTXIMAGECONVERTER=ON \
        -DMAGNUM_WITH_KTXIMPORTER=ON \
        -DMAGNUM_WITH_MESHOPTIMIZERSCENECONVERTER=OFF \
        -DMAGNUM_WITH_MINIEXRIMAGECONVERTER=ON \
        -DMAGNUM_WITH_OPENEXRIMAGECONVERTER=OFF \
        -DMAGNUM_WITH_OPENEXRIMPORTER=OFF \
        -DMAGNUM_WITH_OPENGEXIMPORTER=ON \
        -DMAGNUM_WITH_PRIMITIVEIMPORTER=ON \
        -DMAGNUM_WITH_SPIRVTOOLSSHADERCONVERTER=OFF \
        -DMAGNUM_WITH_STANFORDIMPORTER=ON \
        -DMAGNUM_WITH_STANFORDSCENECONVERTER=ON \
        -DMAGNUM_WITH_STBDXTIMAGECONVERTER=ON \
        -DMAGNUM_WITH_STBIMAGECONVERTER=ON \
        -DMAGNUM_WITH_STBIMAGEIMPORTER=ON \
        -DMAGNUM_WITH_STBRESIZEIMAGECONVERTER=ON \
        -DMAGNUM_WITH_STBTRUETYPEFONT=ON \
        -DMAGNUM_WITH_STBVORBISAUDIOIMPORTER=ON \
        -DMAGNUM_WITH_STLIMPORTER=ON \
        -DMAGNUM_WITH_TINYGLTFIMPORTER=ON \
        -DMAGNUM_WITH_WEBPIMPORTER=OFF \
        -DMAGNUM_BUILD_TESTS=OFF
    ninja
}

check() {
    cd "$_rootdir/build-emscripten"

    # So tests are not even built (takes AGES) when the user doesn't want to
    cmake . -DMAGNUM_BUILD_TESTS=ON
    ninja

    CORRADE_TEST_COLOR=ON ctest --output-on-failure
}

package() {
    cd "$_rootdir/build-emscripten"
    DESTDIR="$pkgdir/" ninja install
}

# kate: hl bash
